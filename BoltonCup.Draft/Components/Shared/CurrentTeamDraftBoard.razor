@inject Data.DraftServiceProvider Drafter
@inject IBCData BCData

<MudStack AlignItems="AlignItems.Center">
    @if (_team is not null && _pick is not null)
    {
        <MudStack Class="pt-2" Justify="Justify.Center" Row>
            <MudText Typo="Typo.h5"><b>Round @_pick.round, Pick @_pick.pick</b></MudText>
        </MudStack>
        <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center" Row>
            <MudImage Src="@_team.logo_url" Height="100" />
            <MudText Typo="Typo.h4"><b>@_team.name</b></MudText>
        </MudStack>
    }
    
    <MudDivider />
    
    @if (_roster is not null)
    {
        <MiniPlayerList Header="Forwards" Players="@(_roster.Where(r => r.position.ToLower().Contains("forward")))" Height="225px" />
        <MiniPlayerList Header="Defense" Players="@(_roster.Where(r => r.position.ToLower().Contains("defense")))" Height="180px" />
        <MiniPlayerList Header="Goalies" Players="@(_roster.Where(r => r.position.ToLower().Contains("goalie")))" Height="80px" />
    }
</MudStack>

@code {

    private BCTeam? _team;
    private IEnumerable<PlayerProfile>? _roster;
    private BCDraftPick? _pick;

    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }

    private async Task LoadDataAsync()
    {
        (_team, _pick) = await Drafter.GetTeamWithCurrentPick();
        
        if (_team is not null)
        {
            _roster = await BCData.GetRosterByTeamId(_team.id);
        }
    }

}