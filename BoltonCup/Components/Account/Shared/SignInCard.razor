@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation

<MudForm @ref="form" Model="@model">
    <MudCard Class="pa-5" Style="min-width: 30vw">
        <MudCardHeader>
            <MudCardContent>
                <MudStack AlignItems="AlignItems.Center">
                    <MudImage Class="mt-4 pr-4 clickable" Src="logos/boltoncup.png" Width="80"
                        @onclick="@(() => Navigation.NavigateTo("/"))" />

                    <MudDivider Class="my-6" />
                    <MudText Class="d-flex justify-center" Typo="Typo.h4"><b>Welcome back</b></MudText>
                </MudStack>
            </MudCardContent>
        </MudCardHeader>
        <MudCardContent>
            @if (submittedAndInvalid)
            {
                <MudText Color="Color.Error">Couldn't find an account with those credentials</MudText>
            }
            <MudTextField @bind-Value="@model.Email" For="(() => model.Email)" Variant="Variant.Outlined" AutoFocus
                Required OnlyValidateIfDirty />
            <MudTextField @bind-Value="@model.Password" For="(() => model.Password)" Variant="Variant.Outlined"
                InputType="InputType.Password" Required OnlyValidateIfDirty />
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" OnClick="@OnContinueClicked">
                @if (loading)
                {
                    <MudProgressCircular Size="Size.Small" Indeterminate="true" />
                }
                else
                {
                    <MudText>Continue</MudText>
                }
            </MudButton>
        </MudCardActions>
        <MudCardContent>
            <MudText Class="d-flex justify-center">Don't have an account? <MudLink Class="px-2" Href="/auth/signup">Sign
                    Up</MudLink>
            </MudText>
        </MudCardContent>
    </MudCard>
</MudForm>

@code {
    private MudForm form;
    private SignInAccountForm model = new();
    private bool loading = false;
    private bool submittedAndInvalid = false;

    public class SignInAccountForm
    {
        [Required]
        [EmailAddress]
        [Label("Email Address")]
        public string Email { get; set; }

        [Required]
        [Label("Password")]
        public string Password { get; set; }
    }

    private async Task OnContinueClicked()
    {
        submittedAndInvalid = false;
        loading = true;

        await form.Validate();
        if (form.IsValid)
        {
            await Task.Delay(3000);
            submittedAndInvalid = true;
        }

        loading = false;

    }
}