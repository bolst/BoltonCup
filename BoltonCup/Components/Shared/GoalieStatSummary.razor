@inject NavigationManager Navigation
@inject Data.IBCData BCData

@if (goalieGameByGame is not null)
{
    <MudPaper Class="pa-2 ml-4" Elevation="3">
    <MudStack Class="d-flex align-center" Row="true">
        <MudText Class="mx-10" Typo="Typo.h6">2024</MudText>
        <MudDivider Vertical="true" FlexItem="true" />

        @StatColumnRF("GP", goalieGameByGame.Count())
        @StatColumnRF("GAA", goalieGameByGame.Average(x => x.GoalsAgainst))
        @StatColumnRF("SO", goalieGameByGame.Where(x => x.GoalsAgainst == 0).Sum(x => 1))
    </MudStack>
</MudPaper>
}

@code {
    [Parameter] public int PlayerId { get; set; }
    private IEnumerable<Data.GoalieGameSummary>? goalieGameByGame;

    private RenderFragment StatColumnRF(string title, double value) => __builder =>
    {
        <MudStack Class="px-10 d-flex justify-center">
            <MudText Class="d-flex justify-center" Typo="Typo.subtitle2">@title</MudText>
            <MudText Class="d-flex justify-center" Typo="Typo.h4">@value</MudText>
        </MudStack>
    };

    protected override async Task OnInitializedAsync()
    {
        goalieGameByGame = await BCData.GetGoalieGameByGame(PlayerId);
    }
}