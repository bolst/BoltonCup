@page "/team"
@inject NavigationManager navManager

<Grid RowColumns="RowColumns.Are1" Padding="Padding.Is4">
    <Column ColumnSize="ColumnSize.IsFull" Shadow="Shadow.Default" Padding="Padding.Is4">

        <Heading TextWeight="TextWeight.Bold" Size="HeadingSize.Is1" Padding="Padding.Is4.OnY">Roster - @teamData.Name
        </Heading>


        <Heading TextWeight="TextWeight.Bold" Size="HeadingSize.Is5">Forwards</Heading>
        <Divider />
        @if (teamData is not null)
        {
            @PlayerSection(teamData.Players!, 'f')
        }

        <br>



        <Heading TextWeight="TextWeight.Bold" Size="HeadingSize.Is5">Defensemen</Heading>
        <Divider />
        @if (teamData is not null)
        {
            @PlayerSection(teamData.Players!, 'd')
        }

        <br>


        <Heading TextWeight="TextWeight.Bold" Size="HeadingSize.Is5">Goalies</Heading>
        <Divider />
        @if (teamData is not null)
        {
            @PlayerSection(teamData.Players!, 'g')
        }

        <br>

    </Column>
</Grid>

@code {

    RenderFragment PlayerSection(List<TeamPlayer> playerData, char positionFlag) => __builder =>
    {
        foreach (var p in playerData)
        {
            var player = p;
            if (player.Position!.ToLower().First() == positionFlag)
            {
                <Grid RowColumns="RowColumns.Are4.OnTablet.Are3.OnMobile" Background="Background.Light"
                    Padding="Padding.Is2.OnMobile.Is4.OnX.Is3.OnY.OnTablet">

                    <Column ColumnSize="ColumnSize.Is1" Margin="Margin.IsAuto.OnY" TextWeight="TextWeight.SemiBold">
                        @player.Number
                    </Column>

                    <Column ColumnSize="ColumnSize.Is2.OnTablet.Is7.OnMobile" Margin="Margin.IsAuto.OnY"
                        TextWeight="TextWeight.SemiBold">
                        @player.Name @(player.Position.Contains("/") ? "(F/D)" : "")
                    </Column>

                    <Column ColumnSize="ColumnSize.Is2.OnTablet.Is4.OnMobile" Margin="Margin.IsAuto.OnY"
                        TextWeight="TextWeight.SemiBold">
                        @player.BirthYear
                    </Column>

                    <Column ColumnSize="ColumnSize.Is6.OnTablet" Margin="Margin.IsAuto"></Column>
                </Grid>
            }
        }
    };

    TeamData? teamData = null;

    protected override void OnInitialized()
    {
        Uri uri = new Uri(navManager.Uri);
        string teamID = System.Web.HttpUtility.ParseQueryString(uri.Query).Get("id") ?? "1";

        teamData = Api.TeamService.Instance().GetTeamByID(teamID);
    }
}