@using Blazorise.Localization
@inject NavigationManager navManager

<Bar Breakpoint="Breakpoint.Desktop" Background="Background.Primary" ThemeContrast="ThemeContrast.Light"
    @bind-Visible="@barVisible">
    <BarBrand>
        <BarItem>
            <BarLink To="">
                <Div Width="Width.Rem(8)" Padding="Padding.Is4">
                    <Image Source="logo.png" Margin="Margin.Is4.FromTop" Fluid />
                </Div>
            </BarLink>
        </BarItem>
    </BarBrand>
    <BarMenu>
        <BarStart>
            <BarItem Padding="Padding.Is2.OnX" @onclick="() => barVisible = false">
                <MyBarLink To="/">HOME</MyBarLink>
            </BarItem>
            <BarItem Padding="Padding.Is2.OnX" @onclick="() => barVisible = false">
                <MyBarLink To="/info">INFO</MyBarLink>
            </BarItem>
            <BarItem Padding="Padding.Is2.OnX" @onclick="() => barVisible = false">
                <MyBarLink To="/teams">TEAMS</MyBarLink>
            </BarItem>
            <BarItem Padding="Padding.Is2.OnX" @onclick="() => barVisible = false">
                <MyBarLink To="/schedule">SCHEDULE</MyBarLink>
            </BarItem>
        </BarStart>
        <BarEnd>
            <BarItem Padding="Padding.Is2.OnX" @onclick="() => InitRegistration()">
                <MyBarLink>REGISTER</MyBarLink>
            </BarItem>
        </BarEnd>
    </BarMenu>
    <Button Display="Display.None.OnTablet.Block.OnMobile" Clicked="ToggleBar" Position="Position.Fixed.End">
        <Icon Name="IconName.Bars" />
    </Button>
</Bar>

@code {


    public bool barVisible { get; set; } = false;
    Task ToggleBar()
    {
        barVisible = !barVisible;
        return Task.CompletedTask;
    }
    string registrationLink =
    "https://forms.office.com/Pages/ResponsePage.aspx?id=szP5EmE9GUuaTWiQId6MydfmFVKM4gFNi5kb75G_wgVURVlQWjNWSDVTNDM4ODhHUlVHSzAyN1lQSy4u";

    void InitRegistration()
    {

        Stripe.StripeConfiguration.ApiKey = Api.Payments.STRIPE_KEY;

        string prod_id = Api.Payments.PROD_ID;


        var options = new Stripe.Checkout.SessionCreateOptions
            {
                LineItems = new List<Stripe.Checkout.SessionLineItemOptions>
{
new Stripe.Checkout.SessionLineItemOptions
{
Price = prod_id,
Quantity = 1,
},
},
                Mode = "payment",
                SuccessUrl = registrationLink,
                CancelUrl = navManager.BaseUri + "",
            };
        try
        {

            var service = new Stripe.Checkout.SessionService();

            Stripe.Checkout.Session session = service.Create(options);
            navManager.NavigateTo(session.Url);

        }
        catch (Exception exc)
        {
            Console.WriteLine("Payment auth error:");
            Console.WriteLine(exc.ToString());
        }
    }
}