@inject Data.IBCData BCData
@inject NavigationManager Navigation

@if (_loading)
{
    <tr>
        <td>
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" />
        </td>
        <td>
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" />
        </td>
        <td>
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" />
        </td>
        <td>
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" />
        </td>
    </tr>
}
else
{
    if (Game is not null && _homeTeam is not null && _awayTeam is not null)
    {
        <tr>
        <td>
            <MudGrid Class="@RowClass" Spacing="1" @onclick=@(()=> Navigation.NavigateTo($"game/{Game.id}"))>
                <MudItem Class="d-none d-md-flex align-center justify-end" xs="12" sm="2">
                    <MudText>@_homeTeam.name_short</MudText>
                </MudItem>
                <MudItem Class="d-flex align-center justify-center justify-md-start" xs="12" sm="5" md="3">
                    <MudImage Src="@_homeTeam.logo_url" Width="75" />
                </MudItem>
                <MudItem Class="d-flex align-center justify-center" xs="12" sm="2">
                    <MudText>vs.</MudText>
                </MudItem>
                <MudItem Class="d-flex align-center justify-center justify-md-end" xs="12" sm="5" md="3">
                    <MudImage Src="@_awayTeam.logo_url" Width="75" />
                </MudItem>
                <MudItem Class="d-none d-md-flex align-center justify-start" xs="12" sm="2">
                    <MudText>@_awayTeam.name_short</MudText>
                </MudItem>
            </MudGrid>
        </td>
        <td>
            <MudText Typo="Typo.body1"><b>@Game.home_score - @Game.away_score</b></MudText>
        </td>
            <td>@Game.date.ToString("hh:mmtt")</td>
            <td>@Game.location (@Game.rink)</td>
        </tr>
    }
}

@code {
    [Parameter] 
    public Data.BCGame? Game { get; set; }

    private Data.BCTeam? _homeTeam;
    private Data.BCTeam? _awayTeam;

    private bool _loading;
    
    private string RowClass => (Game?.state == "FIN") ? "clickable" : string.Empty;
    
    protected override async Task OnParametersSetAsync()
    {
        if (Game is not null)
        {
            _loading = true;
            await Task.Yield();
            
            _homeTeam = await BCData.GetTeamById(Game.home_team_id);
            _awayTeam = await BCData.GetTeamById(Game.away_team_id);

            _loading = false;
            StateHasChanged();
        }
    }
    
}