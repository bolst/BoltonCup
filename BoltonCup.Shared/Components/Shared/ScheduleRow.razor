@inject Data.IBCData BCData
@inject NavigationManager Navigation

@if (Game is not null && homeTeam is not null && awayTeam is not null)
{
    <tr>
    <td>
        <MudGrid Class="@RowClass" Spacing="1" @onclick=@(()=> Navigation.NavigateTo($"game/{Game.id}"))>
            <MudItem Class="d-none d-md-flex align-center justify-end" xs="12" sm="2">
                <MudText>@homeTeam.name_short</MudText>
            </MudItem>
            <MudItem Class="d-flex align-center justify-center justify-md-start" xs="12" sm="5" md="3">
                <MudImage Src="@homeTeam.logo_url" Width="75" />
            </MudItem>
            <MudItem Class="d-flex align-center justify-center" xs="12" sm="2">
                <MudText>vs.</MudText>
            </MudItem>
            <MudItem Class="d-flex align-center justify-center justify-md-end" xs="12" sm="5" md="3">
                <MudImage Src="@awayTeam.logo_url" Width="75" />
            </MudItem>
            <MudItem Class="d-none d-md-flex align-center justify-start" xs="12" sm="2">
                <MudText>@awayTeam.name_short</MudText>
            </MudItem>
        </MudGrid>
    </td>
    <td>
        <MudText Typo="Typo.body1"><b>@Game.home_score - @Game.away_score</b></MudText>
    </td>
        <td>@Game.date.ToString("hh:mmtt")</td>
        <td>@Game.location (@Game.rink)</td>
    </tr>
}
else
{
    <tr>
    <td>
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" />
    </td>
    <td>
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" />
    </td>
    <td>
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" />
    </td>
    <td>
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" />
    </td>
</tr>
}

@code {
    [Parameter] public Data.BCGame? Game { get; set; }

    private Data.BCTeam? homeTeam;
    private Data.BCTeam? awayTeam;

    private string RowClass => (Game?.state == "FIN") ? "clickable" : string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        if (Game is not null)
        {
            homeTeam = await BCData.GetTeamById(Game.home_team_id);
            awayTeam = await BCData.GetTeamById(Game.away_team_id);
        }
    }
    
}