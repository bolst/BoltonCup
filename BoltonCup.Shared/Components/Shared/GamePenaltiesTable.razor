@inject IBCData BCData

@if (Penalties is not null)
{
    <MudSimpleTable Class="mb-6" Hover="true" Dense="true" Striped="true" Elevation="0">
    <thead>
        <tr>
            <th><b>Team</b></th>
            <th><b>Time</b></th>
            <th><b>Penalty</b></th>
        </tr>
    </thead>
    <tbody>
        @foreach (Data.GamePenalty penalty in Penalties)
            {
                <tr>
                    <th><MudImage Src="@(TeamLogoById(penalty.TeamId))" Height="40" /></th>
                    <th>@penalty.Time.ToString(@"hh\:mm")</th>
                    <th>@penalty.PlayerName - @penalty.Infraction</th>
                </tr>
            }
        </tbody>
    </MudSimpleTable>

}

@code {
    [Parameter] public IEnumerable<Data.GamePenalty>? Penalties { get; set; }
    
    private IEnumerable<Team>? teams;

    private string TeamLogoById(int id) => teams is null ? string.Empty : (teams.FirstOrDefault(x => x.Id == id)?.LogoUrl ?? string.Empty);

    protected override async Task OnInitializedAsync()
    {
        teams = await BCData.GetTeams();
    }
    
}