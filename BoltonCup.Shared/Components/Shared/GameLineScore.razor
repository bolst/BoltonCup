@inject Data.IBCData BCData

@if (Goals is not null && Game is not null)
{
    <MudSimpleTable Class="mb-6" Hover="true" Dense="true" Striped="true" Elevation="0">
    <thead>
        <tr>
            <th><b></b></th>
            <th><b>1st</b></th>
            <th><b>2nd</b></th>
            <th><b>3rd</b></th>
            <th><b>T</b></th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th>
                <MudImage Src=@($"logos/logo-{Game.HomeTeamId}.png") Height="50" />
            </th>
            <th>@Goals.Where(g => g.TeamId == Game.HomeTeamId && g.Period == 1).Count()</th>
            <th>@Goals.Where(g => g.TeamId == Game.HomeTeamId && g.Period == 2).Count()</th>
            <th>@Goals.Where(g => g.TeamId == Game.HomeTeamId && g.Period == 3).Count()</th>
            <th>@Goals.Where(g => g.TeamId == Game.HomeTeamId).Count()</th>
        </tr>
        <tr>
            <th>
                <MudImage Src=@($"logos/logo-{Game.AwayTeamId}.png") Height="50" />
            </th>
            <th>@Goals.Where(g => g.TeamId == Game.AwayTeamId && g.Period == 1).Count()</th>
            <th>@Goals.Where(g => g.TeamId == Game.AwayTeamId && g.Period == 2).Count()</th>
            <th>@Goals.Where(g => g.TeamId == Game.AwayTeamId && g.Period == 3).Count()</th>
            <th>@Goals.Where(g => g.TeamId == Game.AwayTeamId).Count()</th>
        </tr>
    </tbody>
</MudSimpleTable>
}

@code {
    [Parameter] public int GameId { get; set; }

    private Data.ScheduledGame? Game;
    private IEnumerable<Data.GameGoal>? Goals;

    protected override async Task OnInitializedAsync()
    {
        Game = await BCData.GetGameById(GameId);
        Goals = await BCData.GetGameGoalsByGameId(GameId);
    }
}