@inject IBCData BCData

<MudDialog>
    <TitleContent>
        <MudStack AlignItems="AlignItems.Center" Row>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.MoodBad" Class="mr-3 mb-n1"/>
                Add Penalty
            </MudText>
            <MudImage Src="@Team?.logo_url" Height="50"/>
        </MudStack>
    </TitleContent>
    <DialogContent>
        <MudSelect Class="my-1" @bind-Value="_player" Label="Player" Margin="Margin.Dense" Dense Required>
            @foreach (var player in Players)
            {
                <MudSelectItem Value="player">@player.name</MudSelectItem>
            }
        </MudSelect>
        
        <MudSelect Class="my-1" @bind-Value="_infraction" Label="Infraction" Margin="Margin.Dense" Dense Clearable>
            <MudSelectItem Value="@("tripping")">Tripping</MudSelectItem>
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="OnAddPenalty" Variant="Variant.Filled" Color="Color.Primary">Add Penalty</MudButton>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public BCTeam? Team { get; set; }
    
    [Parameter]
    public IEnumerable<PlayerProfile> Players { get; set; }


    private PlayerProfile? _player;
    private string? _infraction;
    
    

    private void Cancel() => MudDialog.Cancel();
    
    
    private async Task OnAddPenalty()
    {
        
    }
    
}