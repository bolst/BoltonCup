@inject IBCData BCData

<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.SportsHockey" Class="mr-3 mb-n1"/>
            Add Goal
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudSelect Class="my-1" @bind-Value="_scorer" Label="Scorer" Margin="Margin.Dense" Dense Required>
            @foreach (var player in Players.Where(p => p.id != _assist1?.id && p.id != _assist2?.id))
            {
                <MudSelectItem Value="player">@player.name</MudSelectItem>
            }
        </MudSelect>
        
        <MudSelect Class="my-1" @bind-Value="_assist1" Label="Primary Assist" Margin="Margin.Dense" Dense Clearable>
            @foreach (var player in Players.Where(p => p.id != _scorer?.id && p.id != _assist2?.id))
            {
                <MudSelectItem Value="player">@player.name</MudSelectItem>
            }
        </MudSelect>
        
        <MudSelect Class="my-1" @bind-Value="_assist2" Label="Secondary Assist" Margin="Margin.Dense" Dense Clearable>
            @foreach (var player in Players.Where(p => p.id != _scorer?.id && p.id != _assist1?.id))
            {
                <MudSelectItem Value="player">@player.name</MudSelectItem>
            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="OnAddGoal" Variant="Variant.Filled" Color="Color.Primary">Add Goal</MudButton>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }

    [Parameter]
    public BCTeam? Team { get; set; }
    
    [Parameter]
    public IEnumerable<PlayerProfile> Players { get; set; }


    private PlayerProfile? _scorer;
    private PlayerProfile? _assist1;
    private PlayerProfile? _assist2;
    
    

    private void Cancel() => MudDialog.Cancel();
    
    
    private async Task OnAddGoal()
    {
        
    }
    
}