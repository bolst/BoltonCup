@inject CustomAuthenticationStateProvider CustomAuthenticationStateProvider
@inject NavigationManager Navigation

<MudDrawer @bind-Open="@DrawerOpen" Anchor="Anchor.End" Class="pt-20 px-4" Width="100%" Elevation="1" OverlayAutoClose>
    <MudStack Row>
        <MudIconButton Icon="@Icons.Material.Filled.Close" OnClick="@(() => DrawerOpen = false)" Size="Size.Large" />
    </MudStack>

    <ConfirmButton Color="Color.Error" ConfirmColor="Color.Error" OnClick="OnLogout">Log out</ConfirmButton>
    
</MudDrawer>

@code{
    
    [Parameter]
    public bool Open { get; set; }

    [Parameter] 
    public EventCallback<bool> OpenChanged { get; set; }

    private bool DrawerOpen
    {
        get => Open;
        set
        {
            Open = value;
            OpenChanged.InvokeAsync(value);
        }
    }
    
    private async Task OnLogout()
    {
        await CustomAuthenticationStateProvider.LogoutAsync();
        Navigation.NavigateTo("/");
    }
    
    
}