@page "/game/{id:int}"

@inject IBCData BCData


@if (homeTeam is not null && awayTeam is not null)
{
    <PageHeader Title=@($"{@homeTeam.name_short} @ {awayTeam.name_short}")>
        <MudStack AlignItems="AlignItems.Center" Spacing="1" Wrap="Wrap.Wrap" Row>
            Game - @homeTeam.name_short <img src="@homeTeam.logo_url" height="50"/> vs. @awayTeam.name_short <img src="@awayTeam.logo_url" height="50"/>
        </MudStack>
    </PageHeader>
}
else
{
    <PageHeader Title="Game">Game</PageHeader>
}

<div class="mx-6 mt-6">
    <MudGrid>
        <MudItem xs="12" md="4">
            <MudPaper Class="pa-4">
                <MudText Typo="Typo.h5"><b>Linescore</b></MudText>
                <MudDivider />
                @if (gameGoals is not null)
                {
                    <GameLineScore GameId="@Id" />
                }
                else
                {
                    <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="20vh" />
                }
            </MudPaper>
        </MudItem>
        <MudItem xs="12" md="8">
            <MudText Class="mb-4" Typo="Typo.h5"><b>Scoring</b></MudText>
            @if (gameGoals is not null)
            {
                if (gameGoals.Any(goal => goal.Period == 1))
                {
                    <MudText Typo="Typo.h6">1st Period</MudText>
                    foreach (var goal in gameGoals.Where(g => g.Period == 1))
                    {
                        <GameGoalCard Goal="@goal"/>
                    }
                }

                if (gameGoals.Any(goal => goal.Period == 2))
                {
                    <MudText Typo="Typo.h6">2nd Period</MudText>
                    foreach (var goal in gameGoals.Where(g => g.Period == 2))
                    {
                        <GameGoalCard Goal="@goal"/>
                    }
                }

                if (gameGoals.Any(goal => goal.Period == 3))
                {
                    <MudText Typo="Typo.h6">3rd Period</MudText>
                    foreach (var goal in gameGoals.Where(g => g.Period == 3))
                    {
                        <GameGoalCard Goal="@goal"/>
                    }
                }

                if (gameGoals.Any(goal => goal.Period == 4))
                {
                    <MudText Typo="Typo.h6">Overtime</MudText>
                    foreach (var goal in gameGoals.Where(g => g.Period == 4))
                    {
                        <GameGoalCard Goal="@goal"/>
                    }
                }

                if (gameGoals.Any(goal => goal.Period == 5))
                {
                    <MudText Typo="Typo.h6">Shootout</MudText>
                    foreach (var goal in gameGoals.Where(g => g.Period == 5))
                    {
                        <GameGoalCard Goal="@goal" ShowTime="false"/>
                    }
                }
            }
            else
            {
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Width="50vw" Height="10vh"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Width="50vw" Height="10vh"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Width="50vw" Height="10vh"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Width="50vw" Height="10vh"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Width="50vw" Height="10vh"/>
            }

            @if (gamePenalties is not null && gamePenalties.Any())
            {
                <MudText Class="mt-12 mb-4" Typo="Typo.h5"><b>Penalties</b></MudText>
                if (gamePenalties.Any(penalty => penalty.Period == 1))
                {
                    <MudText Typo="Typo.h6">1st Period</MudText>
                    <MudDivider/>
                    <GamePenaltiesTable Penalties="@gamePenalties.Where(p => p.Period == 1)"/>
                }

                if (gamePenalties.Any(penalty => penalty.Period == 2))
                {
                    <MudText Typo="Typo.h6">2nd Period</MudText>
                    <MudDivider/>
                    <GamePenaltiesTable Penalties="@gamePenalties.Where(p => p.Period == 2)"/>
                }

                if (gamePenalties.Any(penalty => penalty.Period == 3))
                {
                    <MudText Typo="Typo.h6">3rd Period</MudText>
                    <MudDivider/>
                    <GamePenaltiesTable Penalties="@gamePenalties.Where(p => p.Period == 3)"/>
                }
            }
            else if (gamePenalties is null)
            {
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Width="50vw" Height="10vh"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Width="50vw" Height="10vh"/>
                <MudSkeleton Class="my-2" SkeletonType="SkeletonType.Rectangle" Width="50vw" Height="10vh"/>
            }

        </MudItem>

    </MudGrid>
</div>


@code {
    [Parameter] public int Id { get; set; }

    private BCGame? currGame;
    private IEnumerable<GameGoal>? gameGoals;
    private IEnumerable<GamePenalty>? gamePenalties;
    private BCTeam? homeTeam;
    private BCTeam? awayTeam;

    protected override async Task OnInitializedAsync()
    {
        var gameTask = BCData.GetGameById(Id);
        var goalsTask = BCData.GetGameGoalsByGameId(Id);
        var pensTask = BCData.GetGamePenaltiesByGameId(Id);
        await Task.WhenAll(gameTask, goalsTask, pensTask);

        currGame = gameTask.Result;
        gameGoals = goalsTask.Result;
        gamePenalties = pensTask.Result;
        

        var homeTask = BCData.GetTeamById(currGame.home_team_id);
        var awayTask = BCData.GetTeamById(currGame.away_team_id);
        await Task.WhenAll(homeTask, awayTask);
        
        homeTeam = homeTask.Result;
        awayTeam = awayTask.Result;
    }
}
